version: '3.8'

services:
  app-dev:
    build:
      context: .
      dockerfile_inline: |
          FROM php:8.2-apache
          RUN apt update && apt install -y libpq-dev
          RUN docker-php-ext-install pdo pgsql pdo_pgsql
          COPY app/src /var/www/html/
    networks:
      - db_dev
      - external
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=external"
      - "traefik.http.routers.app-dev.rule=Host(`dev.td-grp1.anthonymoll.fr`)"
      - "traefik.http.routers.app-dev.entrypoints=web"
      - "traefik.http.services.app-dev.loadbalancer.server.port=80"
    logging:
      driver: loki
      options:
        loki-url: http://127.0.0.1:3100/loki/api/v1/push
        loki-pipeline-stages: |
          - regex:
              expression: '(level|lvl|severity)=(?P<level>\w+)'
          - labels:
              level:


  db-dev:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - db_dev
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - POSTGRES_HOST=postgreshost
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    depends_on:
      db-dev:
        condition: service_healthy
    networks:
      - db_dev
      - external
    user: root
    volumes:
      - pgadmin-data:/var/lib/pgadmin/
      - ./entrypoint.sh:/entrypoint_custom.sh
    entrypoint: /entrypoint_custom.sh      
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admindb.rule=Host(`admindb.td-grp1.anthonymoll.fr`)"
      - "traefik.http.routers.admindb.entrypoints=web"
      - "traefik.http.services.admindb.loadbalancer.server.port=80"
      - "traefik.docker.network=external"
    logging:
      driver: loki
      options:
        loki-url: http://127.0.0.1:3100/loki/api/v1/push
        loki-pipeline-stages: |
          - regex:
              expression: '(level|lvl|severity)=(?P<level>\w+)'
          - labels:
              level:

networks:
  db_dev:
  external:
    external: true
  

volumes:
  db_data:
  pgadmin-data:
